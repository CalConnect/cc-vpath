



Network Working Group                                           C. Daboo
Internet-Draft                                                Apple Inc.
Updates: 5545, 6321, 6350, 6351 (if                         K. Murchison
         approved)                            Carnegie Mellon University
Intended status: Standards Track                                M. Gajda
Expires: November 16, 2017                                     dmfs GmbH
                                                                  R. Tse
                                                                  P. Tam
                                                                  Ribose
                                                            May 15, 2017


            vPath and URI Fragment Identifiers for vObjects
                         draft-calconnect-vpath

Abstract

   This document defines a mechanism to refer to elements inside a
   vObject (TODO: reference) called "vPath". vPath applies to the
   following formats:

   o  vCard version 4.0 [RFC6350]: the VCARD component

   o  Internet Calendaring and Scheduling Core Object Specification
      (iCalendar) [RFC5545], the VCALENDAR, VEVENT, VJOURNAL, VFREEBUSY,
      VTIMEZONE, VALARM, VTODO, STANDARD, DAYLIGHT components

   o  Calendar Availability Extensions [RFC7953]: the VAVAILABILITY,
      AVAILABLE components

   o  vObject Patching (TODO: I-Ddaboo-icalendar-vpatch): the VPATCH
      component

   Moreover, vPath is used as a URI Fragment Identifier [RFC3986] scheme
   for the following vObject MIME entities:

   o  text/vcard [RFC6350]

   o  text/calendar [RFC5545]

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute




Daboo, et al.           Expires November 16, 2017               [Page 1]

Internet-Draft              calconnect-vpath                    May 2017


   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on November 16, 2017.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  vPath Within a vObject  . . . . . . . . . . . . . . . . .   3
     1.2.  vPath Within Fragments  . . . . . . . . . . . . . . . . .   3
   2.  Conventions Used in This Document . . . . . . . . . . . . . .   4
     2.1.  Definitions . . . . . . . . . . . . . . . . . . . . . . .   4
   3.  vObject Path  . . . . . . . . . . . . . . . . . . . . . . . .   4
   4.  Path Segments . . . . . . . . . . . . . . . . . . . . . . . .   4
     4.1.  Encoding  . . . . . . . . . . . . . . . . . . . . . . . .   5
     4.2.  Character Set . . . . . . . . . . . . . . . . . . . . . .   5
   5.  Path Types  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     5.1.  Absolute Path . . . . . . . . . . . . . . . . . . . . . .   5
     5.2.  Relative Path . . . . . . . . . . . . . . . . . . . . . .   6
   6.  Targeting and Matching  . . . . . . . . . . . . . . . . . . .   6
     6.1.  Components  . . . . . . . . . . . . . . . . . . . . . . .   6
     6.2.  Properties  . . . . . . . . . . . . . . . . . . . . . . .   6
     6.3.  Property Parameters . . . . . . . . . . . . . . . . . . .   7
     6.4.  Match Syntax  . . . . . . . . . . . . . . . . . . . . . .   7
   7.  ABNF Representation . . . . . . . . . . . . . . . . . . . . .   7
   8.  Fragment Identifier . . . . . . . . . . . . . . . . . . . . .   9
     8.1.  Character Set . . . . . . . . . . . . . . . . . . . . . .   9
   9.  Security Considerations . . . . . . . . . . . . . . . . . . .  10



Daboo, et al.           Expires November 16, 2017               [Page 2]

Internet-Draft              calconnect-vpath                    May 2017


   10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10
   11. Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .  11
     11.1.  From Marten: Updated examples (old vs. new)  . . . . . .  11
     11.2.  Referring To Components  . . . . . . . . . . . . . . . .  12
     11.3.  Referring To Properties  . . . . . . . . . . . . . . . .  13
     11.4.  Referring To Property Parameters . . . . . . . . . . . .  14
     11.5.  Referring To Property Values . . . . . . . . . . . . . .  14
     11.6.  Referring To Property Parameter Values . . . . . . . . .  14
   12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  15
     12.1.  Normative References . . . . . . . . . . . . . . . . . .  15
     12.2.  Informative References . . . . . . . . . . . . . . . . .  16
     12.3.  URIs . . . . . . . . . . . . . . . . . . . . . . . . . .  16
   Appendix A.  Acknowledgements . . . . . . . . . . . . . . . . . .  16
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  17

1.  Introduction

   It is often necessary to refer to a particular element within a
   vObject, for example, in the case of patching a vObject component
   [VPATCH] with differential updates.  Here we define a mechanism
   called "vObject Path", to describe an element's location within a
   vObject.

   For example, the "REL" property in a vCard Profile component contains
   a vCard Property Path, which is used to match a property within the
   vCard to indicate the profile's linkage on this property.

   This specification was developed as joint work between TC Calendar
   [CALCONNECT-CALENDAR] and TC VCARD [CALCONNECT-VCARD] committees at
   CalConnect, the Calendaring and Scheduling Consortium.

1.1.  vPath Within a vObject

   vPath syntax allows a value within a vObject to refer to other
   vObject(s) or element(s) within an enclosing vObject or an underlying
   vObject.

   TODO elaborate.

1.2.  vPath Within Fragments

   The vPath syntax is designed to be "fragment-friendly" adhering to
   the URI fragment syntax defined in [RFC3986].

   This document defines URI fragment identifiers for both the text/
   vcard [RFC6350] and text/calendar [RFC5545] media types.





Daboo, et al.           Expires November 16, 2017               [Page 3]

Internet-Draft              calconnect-vpath                    May 2017


   This makes it possible to utilize the vPath to refer to an element of
   a vObject that can be located through a URI [RFC3986].

2.  Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

   Notation in this document is described in ABNF [RFC5234] as used by
   [RFC6350] and [RFC5545].

2.1.  Definitions

   vPath
      a method of locating an element within a vObject or a vObject.

3.  vObject Path

   TODO: Description on why we need the path.

4.  Path Segments

   The vObject Path is composed of a list of "segments" that matches an
   vObject element in the vObject object model hierarchy.

   Segments are separated by segment delimiters within the vObject Path.
   Depending on the element type described, a path segment is always
   preceded by the following delimiters ("path segment delimiters"):

   Valid delimiters are as follows:

   o  Component: "/"

   o  Property: "&"

   o  Property parameter: ";"

   o  Property value: "="

   o  Property parameter value: "="

   A path can start with a series of component segments (which always
   have a "/" prefix).  Those can be followed by a property segment
   (which always has a "&" prefix").  A property segment can be followed
   by either a parameter segment (which always has a ";" prefix), or a
   value segment (which always has a "=" prefix).  A parameter segment
   can be followed by a value segment (which always has a "=" prefix).



Daboo, et al.           Expires November 16, 2017               [Page 4]

Internet-Draft              calconnect-vpath                    May 2017


4.1.  Encoding

   TODO.

4.2.  Character Set

   TODO.  Both vCard [RFC6350] and iCalendar [RFC5545] use UTF-8
   [RFC3629].

   % From RFC 2854 Section 6 % % The use of an explicit charset
   parameter is strongly recommended.  % While [MIME] specifies "The
   default character set, which must be % assumed in the absence of a
   charset parameter, is US-ASCII."  [HTTP] % Section 3.7.1, defines
   that "media subtypes of the 'text' type are % defined to have a
   default charset value of 'ISO-8859-1'".  Section % 19.3 of [HTTP]
   gives additional guidelines.  Using an explicit % charset parameter
   will help avoid confusion.  % % Using an explicit charset parameter
   also takes into account that the % overwhelming majority of deployed
   browsers are set to use something % else than 'ISO-8859-1' as the
   default; the actual default is either a % corporate character
   encoding or character encodings widely deployed % in a certain
   national or regional community.  For further % considerations, please
   also see Section 5.2 of [HTML40].  %

5.  Path Types

   A vObject path can either be an "absolute" or "relative" path.

5.1.  Absolute Path

   An absolute vObject path:

   o  Always starts with "/".

   o  The frame of reference begins at the top-level vObject.

   o  Refers to an element under the hierarchy of the top-level vObject.

   An absolute path always starts with a "/" followed by a component
   segment (the vObject name), as only vObjects are allowed at the top
   most vObject level.

   Example:

   o  "//VCARD#TEL": refers to the "TEL" properties of the top-level
      "VCARD" components





Daboo, et al.           Expires November 16, 2017               [Page 5]

Internet-Draft              calconnect-vpath                    May 2017


5.2.  Relative Path

   o  Does not start with "/".

   o  The frame of reference begins at the current level vObject.

   o  Refers to an element under the hierarchy of the current level
      vObject.

   A relative path can start with a component segment or a property
   segment, with the path assumed to be relative to an enclosing
   component defined by the context.

   o  "/VEVENT#UID": refers to the "UID" properties of the current level
      "VEVENT" components.

   Relative paths are unable to refer to an element that is outside of
   the current component.  The only way to do so is through an absolute
   path.  This restriction is for simplicity and to address security
   concerns, while conforming in expectation to the usage of XPath
   [RFC5261].

6.  Targeting and Matching

6.1.  Components

   To target a second-level component, a component segment is appended
   to the path.

   Component segments can include an optional match item.  When present,
   this allows targeting of components that:

   o  match existance of (or lack thereof) a property

   o  match a specific property value

   o  TODO: match based on property parameters and parameter values

   Specific vObjects may define specific matching criteria, for example
   in iCalendar Path, the "RID" property matcher can be used to match
   the "master" component by the special value of "M" or the general
   "ridval" value such as "20160902T223000Z".

6.2.  Properties

   To target a property inside of a component, a property segment is
   added to the path.




Daboo, et al.           Expires November 16, 2017               [Page 6]

Internet-Draft              calconnect-vpath                    May 2017


   A property segment can include an optional match item.  When present,
   this allows targeting of properties:

   o  by value (matching or not matching a specific value)

   o  contains or lack a particular property parameter

   o  by property parameter value (matching or not matching a specific
      value)

6.3.  Property Parameters

   To target a property parameter, a parameter segment is added to the
   property segment at the end of the path.

   To target a single value in a multi-valued property, a value segment
   is added to the property segment at the end of the path.

   To target a single value in a multi-valued property parameter, a
   value segment is added to the parameter segment at the end of the
   path.

6.4.  Match Syntax

   Values in match items MUST use URL-style percent (%) encoding of the
   characters "/", "#", ";", "=", and "]".  This allows a path to be
   quickly split into segments by breaking apart the text on the
   relevant delimiter characters.

   TODO: provide ABNF representation

   TODO: Singular/plural match, and access to singular plural results.

7.  ABNF Representation

   Syntax for a vObject path is defined by the following ABNF notation.

   TODO: Probably better to use fragment-unreserved as delimiters.

   fragment-unreserved = ":" / "@" / "?" / "!" / "$" / "&" /
                         "'" / "(" / ")" / "," / ";" / "="
                         ; only for authoring development reference

   root-delim  = "/"
   comp-delim  = "/"
   prop-delim  = "&"
   param-delim = ";"




Daboo, et al.           Expires November 16, 2017               [Page 7]

Internet-Draft              calconnect-vpath                    May 2017


   comp-name   = text
   prop-name   = text
   param-name  = text

   operator-equal = "="
   operator-not-equal = "!="
   operator-not-present = "!"
   operator-equality = operator-equal / operator-not-equal

   vpath = path-absolute / path-relative
     ; generic vPath refers to any component, property or parameter

   path-absolute = root-delim comp-segment [prop-path]
     ; a path relative to the root of the vObject

   path-relative = \*( comp-segment ) [prop-path] / prop-path
     ; a path relative to the position of the "current" component
     ; (empty comp-segment refers to the current component)

   prop-path = 1\*( prop-segment ) [ \*( param-segment ) ]

   comp-segment = comp-delim comp-name \*( prop-delim comp-match )
     ; a path segment with optional match criteria to select a specific
     ; component with the given name (or object class)

   comp-match = prop-presence-match / prop-name prop-value-match

   prop-presence-match = [ operator-not-present ] prop-name
     ; matches if the property with the given name is present
     ; (or absent with "!") in the selected component

   prop-value-match = operator-equality value-escaped
     ; matches if a component has a property with the given name
     ; and a matching value (using the given operator)


   prop-segment = prop-delim prop-name [prop-value-match]
                    \*( param-delim param-match )

   param-match = param-presence-match / param-name param-value-match
     ; matches a specific property parameter

   param-presence-match = [ operator-not-present ] param-name
     ; matches if a specific property parameter is present
     ; (or absent ("!"))

   param-value-match = operator-equality value-escaped
     ; matches a specific property parameter and its value



Daboo, et al.           Expires November 16, 2017               [Page 8]

Internet-Draft              calconnect-vpath                    May 2017


   param-segment = param-delim param-name


   value-escaped = \*( unreserved / pct-encoded )
     ; the escaped value containing only unreserved or percent-encoded
     ; chars

   pct-encoded = "%" HEXDIG HEXDIG
     ; taken from RFC 3986

   unreserved  = ALPHA / DIGIT / "-" / "." / "_" / "~"
     ; taken from RFC 3986

8.  Fragment Identifier

   TODO: below lifted from RFC 2854, reword this.

   The URI specification [RFC3986] notes that the semantics of a
   fragment identifier (part of a URI after a "#") is a property of the
   data resulting from a retrieval action, and that the format and
   interpretation of fragment identifiers is dependent on the media type
   of the retrieval result.

   For documents of the text/vcard and text/calendar media types, the
   fragment specifies the desired vPath of the document.

8.1.  Character Set

   TODO.  Fragments are in US-ASCII charset.  UTF-8 content (such as for
   matching) should be encoded in the method of [RFC3986])

   % RFC 3986 Section 2.5 % % For most systems, an unreserved character
   appearing within a URI % component is interpreted as representing the
   data octet corresponding % to that character's encoding in US-ASCII.
   Consumers of URIs assume % that the letter "X" corresponds to the
   octet "01011000", and even % when that assumption is incorrect, there
   is no harm in making it.  A % system that internally provides
   identifiers in the form of a % different character encoding, such as
   EBCDIC, will generally perform % character translation of textual
   identifiers to UTF-8 STD63 [1] at an % internal interface, thereby
   providing more meaningful identifiers % than those resulting from
   simply percent-encoding the original % octets.  % % For example,
   consider an information service that provides data, % stored locally
   using an EBCDIC-based file system, to clients on the % Internet
   through an HTTP server.  When an author creates a file with % the
   name "Laguna Beach" on that file system, the "http" URI %
   corresponding to that resource is expected to contain the meaningful
   % string "Laguna%20Beach".  If, however, that server produces URIs by



Daboo, et al.           Expires November 16, 2017               [Page 9]

Internet-Draft              calconnect-vpath                    May 2017


   % using an overly simplistic raw octet mapping, then the result would
   % be a URI containing "%D3%81%87%A4%95%81@%C2%85%81%83%88".  An %
   internal transcoding interface fixes this problem by transcoding the
   % local name to a superset of US-ASCII prior to producing the URI.  %
   Naturally, proper interpretation of an incoming URI on such an %
   interface requires that percent-encoded octets be decoded (e.g., %
   "%20" to SP) before the reverse transcoding is applied to obtain the
   % local name.  % %

9.  Security Considerations

   Security considerations around vObject formats in the following
   documents MUST be adhered to:

   o  vCard: [RFC6350]

   o  iCalendar: [RFC5545], [RFC5789], [RFC4791]

   TODO

   o  vPath may point to invalid addresses

   o  vPath as fragment identifier may confuse people such as
      "https://a.com/vcard#//VCARD#TEL" as it is different from the HTML
      fragment that people assume.  People may get exploited through
      such misunderstanding in a similar way to spoofing and phishing.

   Software that implement vPath fragment identifiers and those that do
   not, differ in behavior.  The fact that these two types of software
   present differently given the same vPath fragment can cause confusion
   between users.

   Implementers and users of vObject fragment identifiers SHOULD take
   into account of security considerations provided in [RFC3986] and
   [RFC3987].

   % Adapted from RFC 5147

   Please note that fragment identifiers are not used when resolving a
   URI to retrieve the representation of a resource.

10.  IANA Considerations

   Extension vPath specifications produced as Standards Track RFCs MUST
   not modify vPath functionality defined in this document, but are
   allowed to carry additional extensions to vPath.





Daboo, et al.           Expires November 16, 2017              [Page 10]

Internet-Draft              calconnect-vpath                    May 2017


11.  Examples

   TODO!

11.1.  From Marten: Updated examples (old vs. new)

     /VCALENDAR/VEVENT[UID=1234]
     --
     /VCALENDAR/VEVENT&UID=1234


     /VCALENDAR/VEVENT[UID=1234%2F4567][RID=M]
     --
     /VCALENDAR/VEVENT&UID=1234%2F4567&!RECURRENCE-ID


     /VCALENDAR/VEVENT[UID=1234]#STATUS
     --
     /VCALENDAR/VEVENT&UID=1234#STATUS


     /VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com]
     --
     /VCALENDAR/VEVENT#ATTENDEE=mailto:cyrus@example.com


     /VCALENDAR/VEVENT#ATTENDEE[!mailto:cyrus@example.com]
     --
     /VCALENDAR/VEVENT#ATTENDEE!mailto:cyrus@example.com


     /VCALENDAR/VEVENT#ATTENDEE[@MEMBER]
     --
     /VCALENDAR/VEVENT#ATTENDEE&MEMBER


     /VCALENDAR/VEVENT#ATTENDEE[@CN=Cyrus Daboo]
     --
     /VCALENDAR/VEVENT#ATTENDEE&CN=Cyrus%20Daboo


     /VCALENDAR/VEVENT#ATTENDEE[@CN!Cyrus Daboo]
     --
     /VCALENDAR/VEVENT#ATTENDEE&CN!Cyrus%20Daboo


     #ATTENDEE[=mailto:cyrus@example.com]
     --



Daboo, et al.           Expires November 16, 2017              [Page 11]

Internet-Draft              calconnect-vpath                    May 2017


     #ATTENDEE=mailto:cyrus@example.com


     /VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com];PARTSTAT
     --
     /VCALENDAR/VEVENT#ATTENDEE=mailto:cyrus@example.com;PARTSTAT


     /VCALENDAR/VEVENT#ATTENDEE;MEMBER=mailto:group@example.com
     --
     /VCALENDAR/VEVENT#ATTENDEE&MEMBER=mailto:group@example.com;MEMBER

11.2.  Referring To Components

   [TODO, lifted from VPATCH]

   Path contains exactly one or more component segments:

   o  "/VCARD"

   Targets the "VCARD" component in the vCard object [RFC6350].

   o  "/VCALENDAR/VEVENT"

   Targets all "VEVENT" components in the "VCALENDAR" component in the
   iCalendar object.

   o  "/VCALENDAR/VEVENT[UID=1234]"

   Targets any "VEVENT" components that have a "UID" property value
   exactly equal to "1234", in the "VCALENDAR" component in the
   iCalendar object.

   o  `/VCALENDAR/VEVENT[UID=1234%2F4567][RID=M]

   Targets any "VEVENT" components that have a "UID" property value
   exactly equal to "1234/4567" and do not have a "RECURRENCE-ID"
   property, in the "VCALENDAR" component in the iCalendar object.

   o  "/VCALENDAR/VEVENT[UID=1234][RID=20160902T223000Z]"

   Targets any "VEVENT" components that have a "UID" property value
   exactly equal to "1234" and have a "RECURRENCE-ID" property whose UTC
   value is "20160902T223000Z", in the "VCALENDAR" component in the
   iCalendar object.






Daboo, et al.           Expires November 16, 2017              [Page 12]

Internet-Draft              calconnect-vpath                    May 2017


11.3.  Referring To Properties

   [TODO, lifted from VPATCH]

   Path contains exactly zero or more component segments, and one
   property segment.

   o  "/VCALENDAR/VEVENT#STATUS"

   Targets all "STATUS" properties in all "VEVENT" components in the
   "VCALENDAR" component in the iCalendar object.

   o  "/VCALENDAR/VEVENT[UID=1234]#STATUS"

   Targets all "STATUS" properties in any "VEVENT" components that have
   a "UID" property value exactly equal to "1234", in the "VCALENDAR"
   component in the iCalendar object.

   o  "/VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com]"

   Targets any "ATTENDEE" properties that have the value
   "mailto:cyrus@example.com" in all "VEVENT" components, in the
   "VCALENDAR" component in the iCalendar object.

   o  "/VCALENDAR/VEVENT#ATTENDEE[!mailto:cyrus@example.com]"

   Targets any "ATTENDEE" properties that do not have the value
   "mailto:cyrus@example.com" in all "VEVENT" components, in the
   "VCALENDAR" component in the iCalendar object.

   o  "/VCALENDAR/VEVENT#ATTENDEE[@MEMBER]"

   Targets any "ATTENDEE" properties that have a "MEMBER" property
   parameter present in all "VEVENT" components, in the "VCALENDAR"
   component in the iCalendar object

   o  "/VCALENDAR/VEVENT#ATTENDEE[@CN=Cyrus Daboo]"

   Targets any "ATTENDEE" properties that have a "CN" property parameter
   with the value "Cyrus Daboo" present in all "VEVENT" components, in
   the "VCALENDAR" component in the iCalendar object.

   o  "/VCALENDAR/VEVENT#ATTENDEE[@CN!Cyrus Daboo]"

   Targets any "ATTENDEE" properties that have a "CN" property parameter
   not equal to the value "Cyrus Daboo", or do not have a "CN" property
   parameter present in all "VEVENT" components, in the "VCALENDAR"
   component in the iCalendar object.



Daboo, et al.           Expires November 16, 2017              [Page 13]

Internet-Draft              calconnect-vpath                    May 2017


   o  "#ATTENDEE[=mailto:cyrus@example.com]"

   A relative path that targets any "ATTENDEE" properties that have the
   value "mailto:cyrus@example.com" in all components the path is
   relative to.

11.4.  Referring To Property Parameters

   [TODO, lifted from VPATCH]

   Path contains exactly zero or more component segments, one property
   segment, and one parameter segment.

   o  "/VCALENDAR/VEVENT#ATTENDEE;PARTSTAT"

   Targets the "PARTSTAT" parameter on all "ATTENDEE" properties in all
   "VEVENT" components in the "VCALENDAR" component in the iCalendar
   object.

   o  "/VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com];PARTSTAT"

   Targets the "PARTSTAT" parameter on any "ATTENDEE" properties that
   have the value "mailto:cyrus@example.com" in all "VEVENT" components,
   in the "VCALENDAR" component in the iCalendar object.

11.5.  Referring To Property Values

   [TODO, lifted from VPATCH]

   Path contains exactly zero or more component segments, one property
   segment, and one value segment.

   o  "/VCALENDAR/VEVENT#EXDATE=20160905"

   Targets all "EXDATE" property values with the value "20160905" in all
   "VEVENT" components in the "VCALENDAR" component in the iCalendar
   object.

11.6.  Referring To Property Parameter Values

   [TODO, lifted from VPATCH]

   Path contains exactly zero or more component segments, one property
   segment, one parameter segment, and one value segment.

   o  "/VCALENDAR/VEVENT#ATTENDEE;MEMBER=mailto:group@example.com"





Daboo, et al.           Expires November 16, 2017              [Page 14]

Internet-Draft              calconnect-vpath                    May 2017


   Targets all "MEMBER" property parameter values with the value
   "mailto:group@example.com" in all "ATTENDEE" properties in all
   "VEVENT" components in the "VCALENDAR" component in the iCalendar
   object.

12.  References

12.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, DOI 10.17487/RFC3986, January 2005,
              <http://www.rfc-editor.org/info/rfc3986>.

   [RFC3987]  Duerst, M. and M. Suignard, "Internationalized Resource
              Identifiers (IRIs)", RFC 3987, DOI 10.17487/RFC3987,
              January 2005, <http://www.rfc-editor.org/info/rfc3987>.

   [RFC4791]  Daboo, C., Desruisseaux, B., and L. Dusseault,
              "Calendaring Extensions to WebDAV (CalDAV)", RFC 4791,
              DOI 10.17487/RFC4791, March 2007,
              <http://www.rfc-editor.org/info/rfc4791>.

   [RFC5234]  Crocker, D., Ed. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", STD 68, RFC 5234,
              DOI 10.17487/RFC5234, January 2008,
              <http://www.rfc-editor.org/info/rfc5234>.

   [RFC5261]  Urpalainen, J., "An Extensible Markup Language (XML) Patch
              Operations Framework Utilizing XML Path Language (XPath)
              Selectors", RFC 5261, DOI 10.17487/RFC5261, September
              2008, <http://www.rfc-editor.org/info/rfc5261>.

   [RFC5545]  Desruisseaux, B., Ed., "Internet Calendaring and
              Scheduling Core Object Specification (iCalendar)",
              RFC 5545, DOI 10.17487/RFC5545, September 2009,
              <http://www.rfc-editor.org/info/rfc5545>.

   [RFC5789]  Dusseault, L. and J. Snell, "PATCH Method for HTTP",
              RFC 5789, DOI 10.17487/RFC5789, March 2010,
              <http://www.rfc-editor.org/info/rfc5789>.





Daboo, et al.           Expires November 16, 2017              [Page 15]

Internet-Draft              calconnect-vpath                    May 2017


   [RFC6350]  Perreault, S., "vCard Format Specification", RFC 6350,
              DOI 10.17487/RFC6350, August 2011,
              <http://www.rfc-editor.org/info/rfc6350>.

   [RFC7953]  Daboo, C. and M. Douglass, "Calendar Availability",
              RFC 7953, DOI 10.17487/RFC7953, August 2016,
              <http://www.rfc-editor.org/info/rfc7953>.

12.2.  Informative References

   [CALCONNECT-CALENDAR]
              The Calendaring and Scheduling Consortium, "CalConnect
              Calendar Technical Committee", May 2017,
              <http://calconnect.org/about/technical-committees/
              calendar-technical-committee>.

   [CALCONNECT-VCARD]
              The Calendaring and Scheduling Consortium, "CalConnect
              VCARD Technical Committee", May 2017,
              <http://calconnect.org/about/technical-committees/
              vcard-technical-committee>.

   [RFC3629]  Yergeau, F., "UTF-8, a transformation format of ISO
              10646", STD 63, RFC 3629, DOI 10.17487/RFC3629, November
              2003, <http://www.rfc-editor.org/info/rfc3629>.

   [VPATCH]   Daboo, C. and K. Murchison, "The iCalendar VPATCH
              Component (draft)", 10 2016.

12.3.  URIs

   [1] or % some other superset of the US-ASCII character encoding

Appendix A.  Acknowledgements

   The authors wish to thank their families and the following parties
   who helped this materialize and for their support of a better world:

   o  members and the Board of Directors of CalConnect

   This specification was developed as joint work between TC Calendar
   [CALCONNECT-CALENDAR] and TC VCARD [CALCONNECT-VCARD] committees at
   CalConnect, the Calendaring and Scheduling Consortium.








Daboo, et al.           Expires November 16, 2017              [Page 16]

Internet-Draft              calconnect-vpath                    May 2017


Authors' Addresses

   Cyrus Daboo
   Apple Inc.
   1 Infinite Loop
   Cupertino, CA  95014
   USA

   Email: cyrus@daboo.name
   URI:   https://www.apple.com


   Kenneth Murchison
   Carnegie Mellon University
   5000 Forbes Avenue
   Pittsburgh, PA  15213
   USA

   Email: murch@andrew.cmu.edu
   URI:   https://www.cmu.edu


   Marten Gajda
   dmfs GmbH
   Schandauer Strasse 34
   Dresden  01309
   Germany

   Email: marten@dmfs.org
   URI:   https://www.dmfs.org


   Ronald Henry Tse
   Ribose
   Suite 1111, 1 Pedder Street
   Central, Hong Kong
   Hong Kong

   Email: ronald.tse@ribose.com
   URI:   https://www.ribose.com











Daboo, et al.           Expires November 16, 2017              [Page 17]

Internet-Draft              calconnect-vpath                    May 2017


   Peter Kwan Yu Tam
   Ribose
   Suite 1111, 1 Pedder Street
   Central, Hong Kong
   Hong Kong

   Email: peter.tam@ribose.com
   URI:   https://www.ribose.com











































Daboo, et al.           Expires November 16, 2017              [Page 18]
